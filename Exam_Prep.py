# """Задача 1. Доставка на храна
# Ресторант отваря врати и предлага няколко менюта на преференциални цени:
# •	Пилешко меню –  10.35 лв.
# •	Меню с риба – 12.40 лв.
# •	Вегетарианско меню  – 8.15 лв.
# Напишете програма, която изчислява колко ще струва на група хора да си поръчат храна за вкъщи.
# Групата ще си поръча и десерт, чиято цена е равна на 20 процента от общата сметка (без доставката). Цената на доставка е 2.50лв и се начислява най-накрая.
# Вход
# От конзолата се четат 3 реда:
# •	Брой пилешки менюта – цяло число в интервала [0… 99]
# •	Брой менюта с риба - цяло число в интервала [0… 99]
# •	Брой вегетариански менюта - цяло число в интервала [0… 99]
# Изход
# Да се отпечата на конзолата един ред:  "Total: {цена на поръчката}"
# Сумата да е форматирана до втория знак след десетичната запетая.
# """
#
# menu = {
#     "chicken": 10.35,
#     "fish": 12.40,
#     "vegeterian": 8.15
# }
#
# chicken = int(input())
# fish = int(input())
# vegeterian = int(input())
#
# food = chicken*menu["chicken"] + fish*menu["fish"] + vegeterian*menu["vegeterian"]
# desert = food * 0.2
# total = food + desert + 2.50
#
# print(f"Total: {total:.2f}")



# """Задача 2. Сафари
# Симона и Светлин ще ходят на почивка в Африка и искат да отидат на сафари. Понеже за делничните дни вече имат планове,
# решават, че ще отидат събота или неделя. Напишете програма, която изчислява колко ще им струва ходенето на сафари и
# дали бюджетът им ще им стигне да отидат, като имате предвид следното:
# •	Цената на един литър гориво е 2.10 лв.
# •	Цената за екскурзовод е 100лв.
# •	В зависимост от деня има отстъпки от общата цена - за събота 10%, а за неделя 20%
# Вход
# От конзолата се четат 3 реда:
# •	Бюджет – реално число в интервала [0.00… 10000.00]
# •	Колко литра гориво ще са им нужни – реално число в интервала [1.00… 50.00]
# •	Ден от седмицата – текст с възможности "Saturday" и "Sunday"
# Изход
# Да се отпечата на конзолата един ред:
# •	Ако бюджетът е достатъчен:
# "Safari time! Money left: {колко пари са им останали} lv. "
# •	Ако бюджетът не е достатъчен:
# "Not enough money! Money needed: {колко пари не им достигат} lv."
# Сумите трябва да са форматирани до втория знак след десетичната запетая.
# """
#
# budget = float(input())
# fuel_needed = float(input())
# day = input()
#
# cost = fuel_needed*2.10 + 100
#
#
# if day == "Saturday":
#     cost = cost * 0.9
# if day == "Sunday":
#     cost = cost * 0.8
#
# if budget >= cost:
#     print(f"Safari time! Money left: {budget-cost:.2f} lv. ")
# else:
#     print(f"Not enough money! Money needed: {cost - budget:.2f} lv.")


# """Задача 3. Мобилен оператор
# Мобилен оператор предлага договори с различна месечна такса в зависимост от срока - 1 или 2 години.  Да се напише програма, която изчислява дължимата сума, която трябва да се плати за определен брой месеци.
# срок / тип	Small	Middle	Large	ExtraLarge
# 1 година(one)	9.98 лв.	18.99 лв.	25.98 лв.	35.99 лв.
# 2 години(two)	8.58 лв.	17.09 лв.	23.59 лв.	31.79 лв.
# Условия:
# •	при добавен мобилен интернет, към таксата за един месец се добавя:
# o	при такса по-малка или равна на 10.00 лв.  5.50 лв.
# o	при такса по-малка или равна на 30.00 лв.  4.35 лв.
# o	при такса по-голяма от 30.00 лв.  3.85 лв.
# •	ако договорът e за две години, общата сума се намалява с 3.75%
# Вход
# От конзолата се четат 3 реда:
# 1.	Срок на договор – текст – "one", или "two"
# 2.	Тип на договор – текст – "Small",  "Middle", "Large"или "ExtraLarge"
# 3.	Добавен мобилен интернет – текст – "yes" или "no"
# 4.	Брой месеци за плащане - цяло число в интервала [1 … 24]
# Изход
# На конзолата се отпечатва 1 ред:
# •	Цената, която заплаща клиентът, форматирана до втория знак след десетичната запетая, в следния формат:  "{цената} lv."
# """
#
# one_year = {
#     "Small": 9.98,
#     "Middle": 18.99,
#     "Large": 25.98,
#     "ExtraLarge": 35.99
# }
#
# two_year = {
#     "Small": 8.58,
#     "Middle": 17.09,
#     "Large": 23.59,
#     "ExtraLarge": 31.79
# }
#
# internet_plans = {
#     "lowest": 5.50,
#     "middle": 4.35,
#     "highest": 3.85
# }
#
# length = input()
# plan = input()
# internet = input()
# months = int(input())
#
# if length == "one":
#     cost = months * one_year[plan]
#     if internet == "yes":
#         if one_year[plan] <= 10:
#             cost += months*internet_plans["lowest"]
#         elif 10 < one_year[plan] <= 30:
#             cost += months * internet_plans["middle"]
#         else:
#             cost += months * internet_plans["highest"]
#
# if length == "two":
#     cost = months * two_year[plan]
#     if internet == "yes":
#         if two_year[plan] <= 10:
#             cost += months*internet_plans["lowest"]
#         elif 10 < two_year[plan] <= 30:
#             cost += months * internet_plans["middle"]
#         else:
#             cost += months * internet_plans["highest"]
#     cost -= cost * 0.0375
#
# print(f"{cost:.2f} lv.")
#
## SOFTUNI VERSION
# length = input()
# plan = input()
# internet = input()
# months = int(input())
# price = 0
# discount = 0
#
# if length == "one":
#     if plan == "Small":
#         price = 9.98
#     elif plan == "Middle":
#         price = 18.99
#     elif plan == "Large":
#         price = 25.98
#     elif plan == "ExtraLarge":
#         price = 35.99
#
# if length == "two":
#     if plan == "Small":
#         price = 8.58
#     elif plan == "Middle":
#         price = 17.09
#     elif plan == "Large":
#         price = 23.59
#     elif plan == "ExtraLarge":
#         price = 31.79
#     discount = 0.0375
#
# if internet == "yes":
#     if price <= 10:
#         price += 5.50
#     elif 10 < price <= 30:
#         price += 4.35
#     else:
#         price += 3.85
#
# cost = price * months
# cost -= cost * discount
#
# print(f"{cost:.2f} lv.")


# """Задача 4. Туристически магазин
# Времето се затопля и туристи, започват да си правят разходки високо в планината, където все още сняг, като за целта те трябва да закупят нужната туристическа екипировка.
# Вашата задача е да напишете програма, която да изчислява, стойността на екипировката, както и дали определения бюджет е достатъчен или не, като се знае, че в магазина има следната промоция: Всеки трети продукт е на половин цена.
# Вход
# От конзолата се чете:
# •	На първи ред – бюджетът - реално число в интервала [1.00… 100000.00]
# •	След това поредица от два реда (до получаване на команда "Stop" или при заявка за купуване на продукт, чиято стойност е по-висока от наличния бюджет) :
# o	Име на продукта – текст
# o	Цена на продукта – реално число в интервала [1.00… 5000.00]
# Изход
# На конзолата да се отпечатат следните редове според случая:
# •	При получаване на командата "Stop", на един ред:
# o	"You bought {брой на закупените продукти} products for {цена на покупките} leva."
# •	При заявка за покупка на продукт, чиято цена е по-висока от останалите пари, на два реда:
# o	"You don't have enough money!"
# o	"You need {недостигащи пари} leva!"
# """
#
# budget = float(input())
# total = 0
# counter = 0
# while True:
#     product = input()
#     if product == "Stop":
#         break
#     counter += 1
#     price = float(input())
#     if counter % 3 == 0:
#         price = price * 0.5
#     total += price
#     if total > budget:
#         print(f"You don't have enough money!")
#         print(f"You need {total-budget:.2f} leva!")
#         break
#
# if total <= budget:
#     print(f"You bought {counter} products for {total:.2f} leva.")


# """Задача 5. Деление без остатък
# Дадени са n цели числа в интервала [1…1000]. От тях някакъв процент p1 се делят без остатък на 2, друг процент p2 се делят без остатък на 3, друг процент p3 се делят без остатък на 4. Да се напише програма, която изчислява и отпечатва процентите p1, p2 и p3.
# Пример: имаме n = 10 числа: 680, 2, 600, 200, 800, 799, 199, 46, 128, 65. Получаваме следното разпределение и визуализация:
# Деление без остатък на:	Числа в диапазона	Брой числа	Процент
# 2	680, 2, 600, 200, 800, 46, 128	7	p1 = 7.0 / 10 * 100 = 70.00%
# 3	600	1	p2 = 1 / 10 * 100 = 10.00%
# 4	680, 600, 200, 800, 128	5	p3 = 5 / 10 * 100 = 50.00%
# Вход
# На първия ред от входа стои цялото число n (1 ≤ n ≤ 1000) – брой числа.
# На следващите n-на брой реда стои по едно цяло число в интервала [1…1000] – числата които да бъдат проверени на колко се делят.
# Изход
# Да се отпечатат на конзолата 3 реда, всеки от които съдържа процент между 0% и 100%, с точност две цифри след десетичната точка, например 25.00%, 66.67%, 57.14%.
# •	На първият ред – процентът на числата които се делят на 2
# •	На вторият ред – процентът на числата които се делят на 3
# •	На третият ред – процентът на числата които се делят на 4
# """
#
# n = int(input())
# mod_2 = 0
# mod_3 = 0
# mod_4 = 0
#
# for i in range(n):
#     number = int(input())
#     if number % 2 == 0:
#         mod_2 += 1
#
#     if number % 3 == 0:
#         mod_3 += 1
#
#     if number % 4 == 0:
#         mod_4 += 1
#
#
# p1 = (mod_2/n) * 100
# p2 = (mod_3/n) * 100
# p3 = (mod_4/n) * 100
# print(f"{p1:.2f}%")
# print(f"{p2:.2f}%")
# print(f"{p3:.2f}%")



# """Задача 6. Ветеринарен Паркинг
# Деси трябва да заведе котката си на ветеринар, но паркингът се заплаща. Напишете програма, която пресмята колко общо
# трябва да се плати за престоя на колата на Деси на паркинга. Паркингът е различен от останалите и има разнообразен
# ценоразпис. За всеки четен ден и нечетен час, паркингът таксува 2.50 лева. Във всеки нечетен ден и четен час таксата е
# 1.25 лева, във всички останали случаи се заплаща 1 лев. Таксуването става на всеки изминал час от деня. Всеки един от
# изходите трябва да бъде закръглен до втория знак след десетичната запетая.
# Вход
# От конзолата се четaт два реда:
# •	Брой дни – цяло число в интервала [1 … 5]
# •	Брой часове за всеки един от дните - цяло число в интервала [1 … 24]
# Изход:
# Да се отпечата на конзолата:
# •	За всеки изминал ден, общата сума, която трябва да се плати – "Day: {индексът на деня} –
# {общата сума за деня} leva"
# •	Когато програмата приключи - "Total: {общата сума за всички дни} leva"
# """
#
# n = int(input())
# hours = int(input())
# total = 0
# for i in range(1, n+1):
#     subtotal = 0
#     for j in range(1, hours+1):
#         if i % 2 == 0 and j % 2 != 0:
#             subtotal += 2.50
#         elif i % 2 != 0 and j % 2 == 0:
#             subtotal += 1.25
#         else:
#             subtotal += 1
#     total += subtotal
#     print(f"Day: {i} - {subtotal:.2f} leva")
#
# print(f"Total: {total:.2f} leva")



# """Задача 1a. Change бюро
# Преди време Петър си е купил биткойн. Сега ще ходи на екскурзия из Европа и ще му трябва евро. Освен биткойн има и
# китайски юанa. Той иска да обмени парите си в евро за екскурзията. Напишете програма, която да пресмята колко евро може
# да купи спрямо следните валутни курсове:
# •	1 биткойн = 1168 лева.
# •	1 китайски юан = 0.15 долара.
# •	1 долар = 1.76 лева.
# •	1 евро = 1.95 лева.
# Обменното бюро има комисионна от 0 до 5 процента от крайната сума в евро.
# Вход
# От конзолата се четат 3 числа:
# •	На първия ред – броят биткойни. Цяло число в интервала [0…20]
# •	На втория ред – броят китайски юана. Реално число в интервала [0.00… 50 000.00]
# •	На третия ред – комисионната. Реално число в интервала [0.00 ... 5.00]
# Изход
# На конзолата да се отпечата 1 число - резултатът от обмяната на валутите. Резултатът да се форматира до втората цифра
# след десетичната запетая.
# """
#
# bitcoins = int(input())
# yuans = float(input())
# commission = float(input())
# total_lv = bitcoins*1168 + (yuans*0.15)*1.76
# total_eur = total_lv / 1.95
# total_eur -= total_eur * (commission/100)
# print(f"{total_eur:.2f}")

# """Задача 1b. Учебни материали
# Учебната година вече е започнала и отговорничката на 10Б клас - Ани трябва да купи определен брой пакетчета с химикали, пакетчета с маркери, както и препарат за почистване на дъска. Тя е редовна клиентка на една книжарница, и има намаление за нея, което представлява някакъв процент от общата сума. Напишете програма, която изчислява колко пари ще трябва да събере Ани, за да плати сметката, като имате предвид следния ценоразпис:
# •	Пакет химикали - 5.80 лв
# •	Пакет маркери - 7.20 лв
# •	Препарат - 1.20 лв (за литър)
# Вход
# От конзолата се четат 4 числа:
# •	Първи ред - брой пакети химикали. Цяло число в интервала [0...100]
# •	Втори ред - брой пакети маркери. Цяло число в интервала [0...100]
# •	Трети ред - литър препарат за почистване на дъска. Реално число в интервала [0.00…50.00]
# •	Четвърти ред - процентът намаление. Цяло число в интервала [0...100]
# Изход
# Да се отпечата на конзолата колко пари ще са нужни на Ани, за да си плати сметката.
# Резултатът да се ФОРМАТИРА до третия знак след десетичната запетая.
# """
#
# similar to the previous problem so just solved with dictionary and 1-liner
#
# pens = int(input())
# markers = int(input())
# cleaner = float(input())
# discount = int(input())
# discount = discount / 100
#
# price_list = {
#     "pens": 5.80,
#     "markers": 7.20,
#     "cleaner": 1.20
#     }
#
# cost = pens * price_list["pens"] + markers * price_list["markers"] + cleaner * price_list["cleaner"]
# cost -= cost*discount
# print(f"{cost:.3f}")



# """Задача 2a. Котешка разходка
# Деси трябва да разхожда своята котка ежедневно, но не може да прецени колко минути са досатъчни на ден. Като знаете
# колко калории приема котката на ден, колко пъти и по колко минути Деси разхожда котката си, напишете програма, която
# изчислява дали разходката е достатъчна. За всяка минута от разходката, котката гори по 5 калории.
# Разходката е достатъчна, ако котката изграря 50% от приетите калории.
#
# Вход
# Входът се чете от конзолата и съдържа точно 3 реда:
# •	На първия ред - минути разходка на ден - цяло число в интервала [1...50]
# •	На втория ред - броят на разходките дневно - цяло число в интервала [1…10]
# •	На третия ред - приетите от котката калории на ден – цяло число в интервала [100…4000]
# Изход
# Да се отпечата на конзолата един ред:
# •	Ако изгорените калории през разходката са повече или равни на  50% от приетите през деня калории:
# "Yes, the walk for your cat is enough. Burned calories per day: {общо изгорени калории от разходката}."
# •	Ако  изгорените калории през разходката са по-малко от 50% от приетите през деня калории:
#  "No, the walk for your cat is not enough. Burned calories per day: {общо изгорени калории от разходката}."
# """
#
# minutes = int(input())
# walks = int(input())
# calories = int(input())
#
# total_minutes = minutes * walks
# burned_calories = total_minutes * 5
#
# if burned_calories >= calories/2:
#     print(f"Yes, the walk for your cat is enough. Burned calories per day: {burned_calories}.")
# else:
#     print(f"No, the walk for your cat is not enough. Burned calories per day: {burned_calories}.")


# """Задача 2b.  Скоростно изкачване
# Георги решава да подобри рекорда за най-бързо изкачване на връх Монблан. На конзолата се въвежда рекордът в секунди,
# който Георги трябва да подобри, разстоянието в метри, което трябва да изкачи и времето в секунди, за което той изкачва
# 1 метър. Да се напише програма, която изчислява дали се е справил със задачата, като се има предвид, че: наклона на
# терена го забавя на всеки 50 м. с 30 секунди. Да се изчисли времето в секунди, за което Георги ще изкачи разстоянието
# до върха и разликата спрямо рекорда.
# Когато се изчислява колко пъти Георги ще се забави в резултат на наклона на терена, резултатът трябва да се закръгли
# надолу до най-близкото цяло число.
#
# Вход
# От конзолата се четат 3 реда:
# 1.	Рекордът в секунди – реално число в интервала [0.00 … 100000.00]
# 2.	Разстоянието в метри – реално число в интервала [0.00 … 100000.00]
# 3.	Времето в секунди, за което изкачва 1 м. – реално число в интервала [0.00 … 1000.00]
# Изход
# Отпечатването на конзолата зависи от резултата:
# •	Ако Георги е подобрил рекорда отпечатваме:
# o	" Yes! The new record is {времето на Георги} seconds."
# •	Ако НЕ е подобрил рекорда отпечатваме:
# o	"No! He was {недостигащите секунди} seconds slower."
# Резултатът трябва да се форматира до втория знак след десетичната запетая.
# """
#
# record = float(input())
# distance_m = float(input())
# seconds_per_m = float(input())
#
# slow_down = int(distance_m/50)*30
# time = distance_m * seconds_per_m
# time += slow_down
#
# if time < record:
#     print(f"Yes! The new record is {time:.2f} seconds.")
# else:
#     print(f"No! He was {abs(record-time):.2f} seconds slower.")



# """Задача 3a. Енергийни гелове
# Сезона за изкачване на алпийски върхове започва и всички алпинисти, се запасяват с енергийни гелове за изкачването.
# Фирма предлага малки и големи разфасовки с по 2 бр. и 5 бр. енергийни гела, като цената на един гел зависи от плодовете,
# от които е направен. В зависимост от размера на разфасовката, цената за брой енергиен гел е различна. От конзолата се
# четат плодовете, размерът на опаковката ((малка) 2 бр. или (голяма) 5 бр.), както и колко разфасовки са поръчани.
# Да се напише програма, която изчислява сумата, която трябва да се плати за поръчката.
# 	            Диня    	    Манго   	        Ананас      Малина
# 2 броя (small)	56 лв./бр.	    36.66 лв./бр.	42.10 лв./бр.	20 лв./бр.
# 5 броя (big)	28.70 лв./бр.	19.60 лв./бр.	24.80 лв./бр.	15.20 лв./бр.
# При поръчки:
# •	от 400 лв. до 1000 лв. включително има 15% отстъпка
# •	над 1000 лв. има 50% отстъпка
# Вход
# От конзолата се четат 3 реда:
# 1.	Плод - текст с възможности: "Watermelon", "Mango", "Pineapple" или "Raspberry"
# 2.	Размерът на сета - текст с възможности: "small" или "big"
# 3.	Брой на поръчаните сетове - цяло число в интервала [1 … 10000]
# Изход
# На конзолата се отпечатва 1 ред:
# •	Цената, която трябва да се заплати, форматирана до втория знак след десетичната запетая,
# в следния формат:
# "{цената} lv."
#
# """
#
# fruit = input()
# size = input()
# quantity = int(input())
# cost = 0
#
# small = {
#     "Watermelon": 56.00,
#     "Mango": 36.66,
#     "Pineapple": 42.10,
#     "Raspberry": 20.00
# }
#
# big = {
#     "Watermelon": 28.70,
#     "Mango": 19.60,
#     "Pineapple": 24.80,
#     "Raspberry": 15.20
# }
#
# if size == "small":
#     cost += small[fruit] * quantity * 2
# else:
#     cost += big[fruit] * quantity * 5
#
# if 400 <= cost <= 1000:
#     cost -= cost * 0.15
# if cost > 1000:
#     cost -= cost * 0.5
#
# print(f"{cost:.2f} lv.")



# """Задача 3b. Карта за фитнес
# Да се напише програма, която проверява дали първоначално налична сума е достатъчна, за да се заплати карта за месечен достъп във фитнес.
# Цената на картата зависи от пола на клиента и спорта, който практикува:
# Пол	    Gym	Boxing	Yoga	Zumba	Dances	Pilates
# мъж	    $42	$41	    $45	    $34	    $51	    $39
# жена	$35	$37	    $42	    $31	    $53	    $37
#
# Всички цени на карти за ученици (възраст под 19 години вкл.) са с 20% намаление.
# Вход
# От конзолата се прочитат 4 реда:
# •	Сумата, с която разполагаме - реално число в интервала [10.00…1000.00]
# •	Пол - символ ('m' за мъж и 'f' за жена)
# •	Възраст - цяло число в интервала [5…105]
# •	Спорт - текст (една от възможностите в таблицата)
# Изход
# На конзолата се отпечатва 1 ред:
# •	Ако сумата е достатъчна:
# "You purchased a 1 month pass for {sport}."
# където {sport} е въведения тип спорт
# •	Ако сумата не е достатъчна трябва да се пресметне колко още пари са необходими, за да се закупи карта:
# "You don't have enough money! You need ${money} more."
# където {money} e оставащата сума нужна, за да се закупи картата, форматирана до втория знак след десетичната запетая.
# """
#
# budget = float(input())
# gender = input()
# age = int(input())
# sport = input()
#
# m = {
#     "Gym": 42,
#     "Boxing": 41,
#     "Yoga": 45,
#     "Zumba": 34,
#     "Dances": 51,
#     "Pilates": 39
# }
#
# f = {
#     "Gym": 35,
#     "Boxing": 37,
#     "Yoga": 42,
#     "Zumba": 31,
#     "Dances": 53,
#     "Pilates": 37
# }
#
# cost = 0
# if gender == "m":
#     cost = m[sport]
# else:
#     cost = f[sport]
#
# if age <= 19:
#     cost -= cost * 0.20
#
# if budget >= cost:
#     print(f"You purchased a 1 month pass for {sport}.")
# else:
#     print(f"You don't have enough money! You need ${cost-budget:.2f} more.")



# """4a. Храна за любимци
# Ани има два домашни любимеца - куче и котка. Напишете програма, която изготвя статистика за храната на домашните
# любимци за определен брой дни. Всеки ден кучето и котката изяждат различно количество от общата им храна.
# На всеки трети ден получават награда - бисквитки. Количеството на бисквитките е 10% от общо изядената храна за деня.
# Вашата програма трябва да отпечатва статистика за количеството бисквитки, които са изяли, колко процента от
# първоначалното количество обща храна са изяли и колко процента от изядената храна е изяло кучето и колко е изяла котката.
# Вход
# Първоначално се чете един ред:
# •	Брой дни – цяло число в диапазона [1…30]
# •	Общо количество храна – реално число в диапазона [0.00…10000.00]
# След това за всеки ден се чете:
# o	Количество изядена храна от кучето – цяло число в диапазона [10…500]
# o	Количество изядена храна от котката – цяло число в диапазона [10…500]
# Изход
# На конзолата да се отпечатват четири реда:
# •	"Total eaten biscuits: {количество изядени бисквитки}gr."
# •	"{процент изядена храна}% of the food has been eaten."
# •	"{процент изядена храна от кучето}% eaten from the dog."
# •	"{процент изядена храна от котката}% eaten from the cat."
# Количеството изядени бисквитки трябва да бъде закръглено до най – близкото цяло число, а процентът храна трябва да бъде форматиран до втората цифра след десетичния знак.
# """
# days = int(input())
# total_food = float(input())
# total_dog = 0
# total_cat = 0
# total_biscuits = 0
#
# for i in range(1, days+1):
#     dog_ate = int(input())
#     cat_ate = int(input())
#     if i % 3 == 0:
#         total_biscuits += (dog_ate + cat_ate) * 0.10
#
#     total_dog += dog_ate
#     total_cat += cat_ate
#
# consumed = (total_dog + total_cat) / total_food * 100
# dog_consumed = total_dog / (total_cat + total_dog) * 100
# cat_consumed = total_cat / (total_cat + total_dog) * 100
#
# print(f"Total eaten biscuits: {round(total_biscuits)}gr.")
# print(f"{consumed:.2f}% of the food has been eaten.")
# print(f"{dog_consumed:.2f}% eaten from the dog.")
# print(f"{cat_consumed:.2f}% eaten from the cat.")


# """Задача 4b. Трекинг мания
# Катерачи от цяла България се събират на групи и набелязват следващите върхове за изкачване. Според размера на групата,
# катерачите ще изкачват различни върхове.
# •	Група до 5 човека– Мусала
# •	Група от 6 до 12 – Монблан
# •	Група от 13 до 25 – Килиманджаро
# •	Група от 26 до 40 – К2
# •	Група от 41 или повече – Еверест
# Да се напише програма, която изчислява процента на катерачите изкачващи всеки връх.
# Вход
# От конзолата се четат поредица от числа, всяко на отделен ред:
# •	На първия ред – броя на групите от катерачи – цяло число в интервала [1...1000]
# •	За всяка една група на отделен ред – броя на хората в групата – цяло число в интервала [1...1000]
# Изход
# Да се отпечатат на конзолата 5 реда, всеки от които съдържа процент между 0.00% и 100.00% с точност до втората цифра
# след десетичната запетая.
# •	Първи ред - процентът изкачващи Мусала
# •	Втори ред – процентът изкачващи Монблан
# •	Трети ред – процентът изкачващи Килиманджаро
# •	Четвърти ред – процентът изкачващи К2
# •	Пети ред – процентът изкачващи Еверест
# """
#
# n = int(input())
#
# total = 0
# musala = 0
# monblan = 0
# kilimanjaro = 0
# k2 = 0
# everest = 0
#
# for i in range(n):
#     members = int(input())
#     total += members
#     if members <= 5:
#         musala += members
#     elif 5 < members <= 12:
#         monblan += members
#     elif 12 < members <= 25:
#         kilimanjaro += members
#     elif 25 < members <= 40:
#         k2 += members
#     else:
#         everest += members
#
# print(f"{(musala/total)*100:.2f}%")
# print(f"{(monblan/total)*100:.2f}%")
# print(f"{(kilimanjaro/total)*100:.2f}%")
# print(f"{(k2/total)*100:.2f}%")
# print(f"{(everest/total)*100:.2f}%")
#
#
# """Задача 5a. Грижи за кученце
# Ани намира кученце, за което ще се грижи, докато се намери някой да го осинови. То изяжда дневно определено количество
# храна. Да се напише програма, която проверява дали количеството храна, което е закупено за кученцето, ще е достатъчно
# докато кученцето бъде осиновено.
# Вход
# От конзолата се прочитат:
# •	Закупеното количество храна за кученцето в килограми – цяло число в интервала [1 …100]
# •	На всеки следващ ред до получаване на команда Adopted ще получавате колко грама изяжда кученцето на всяко хранене - цяло число в интервала [10 …1000]
# Изход
# На конзолата се отпечатва 1 ред:
# •	Ако количеството храна е достатъчно да се отпечата:
#  	"Food is enough! Leftovers: {останала храна} grams."
# •	Ако количеството храна не е достатъчно да се отпечата:
#  	"Food is not enough. You need {нужно количество храна} grams more."
# """
#
# food_gr = int(input()) * 1000
# while True:
#     consumed_gr = input()
#     if consumed_gr == "Adopted":
#         break
#     else:
#         food_gr -= int(consumed_gr)
#
# if food_gr < 0:
#     print(f"Food is not enough. You need {food_gr * -1} grams more.")
# else:
#     print(f"Food is enough! Leftovers: {food_gr} grams.")
#
#
# capacity = float(input())
# loaded = 0
# while capacity > 0:
#     volume = input()
#     counter = 0
#     if volume == "End":
#         print("Congratulations! All suitcases are loaded!")
#         break
#     counter += 1
#     volume = float(volume)
#     if counter % 3 == 0:
#         volume += volume * 0.10
#     if volume > capacity:
#         print("No more space!")
#         break
#
#     capacity -= volume
#     loaded += 1
#
#
# print(f"Statistic: {loaded} suitcases loaded.")


# """Задача 6a. Коледен турнир
# Напишете програма, която проследява представянето на вашия отбор на благотворителен коледен турнир.
# Всеки ден получавате имена на игри до команда "Finish". Със спечелването на всяка една игра печелите по 20лв. за
# благотворителност. Трябва да изчислите колко пари сте спечелили на края на деня. Ако имате повече спечелени игри,
# отколкото загубени – вие сте победители този ден и увеличавате парите от него с 10%. При приключване на турнира ако
# през повечето дни сте били победители печелите турнира и увеличавате всичките спечелени пари с 20%.
# Никога няма да имате равен брой спечелени и загубени игри.
# Вход
# Първоначално от конзолата се прочита броя дни на турнира – цяло число в интервала [1… 20]
# До получаване на командата "Finish" се чете:
# •	Спорт  – текст
# За всеки спорт се прочита:
# o	Резултат  – текст с възможности: "win" или "lose"
# Изход
# Накрая се отпечатва един ред:
# •	Ако сте спечелили турнира:
#      	"You won the tournament! Total raised money: {спечелените пари}"
# •	Ако сте загубили на турнира:
# "You lost the tournament! Total raised money: {спечелените пари}"
# Парите да бъдат форматирани до втората цифра след десетичния знак.
# """
#
# days = int(input())
#
# total_wins = 0
# total_earnings = 0
#
# for i in range(days):
#     daily_earnings = 0
#     won = 0
#     lost = 0
#     while True:
#         sport = input()
#         if sport == "Finish":
#             break
#         result = input()
#         if result == "win":
#             daily_earnings += 20
#             won += 1
#         else:
#             lost += 1
#
#     if won > lost:
#         daily_earnings += daily_earnings * 0.10
#         total_wins += 1
#     total_earnings += daily_earnings
# if total_wins > days/2:
#     total_earnings += total_earnings * 0.20
#     print(f"You won the tournament! Total raised money: {total_earnings:.2f}")
# else:
#     print(f"You lost the tournament! Total raised money: {total_earnings:.2f}")


